{"version":3,"sources":["Styles.ts","utilities/typeguards.ts","utilities/responseHandlers.ts","utilities/utils.tsx","rich-content/Button.tsx","rich-content/Info.tsx","rich-content/Chips.tsx","rich-content/Description.tsx","rich-content/List.tsx","rich-content/Accordion.tsx","rich-content/RichContent.tsx","rich-content/Text.tsx","utilities/components.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["Widget","styled","button","Messenger","div","props","opened","TitleBar","TextWindow","MessageListWrapper","MessageList","Message","presentYourself","keyframes","UserMessage","AgentMessage","RichContentCard","InputField","TextInput","input","SendIcon","svg","visible","ChatSVG","CustomIcon","img","CloseSVG","Link","a","IconContainer","ButtonText","Image","InfoContainer","InfoImage","InfoTextContainer","DescriptionContainer","DescriptionTitle","DescriptionLine","Title","SubTitle","Divider","hr","ListItemContainer","AccordionContainer","TopRow","Content","ImageContent","AccordionImage","TextContent","AccordionTitle","AccordionSubTitle","AccordionIcon","open","TextRow","ChipContainer","Chip","ChipImage","Redirect","Error","isChips","param","type","isPayloadList","isRichContent","handleResponse","async","apiURI","languageCode","value","event","queryObj","text","addUserMessageResult","axios","post","queryInput","JSONBeginningIndex","data","JSON","parse","substr","err","console","log","response","addAgentMessage","_richContent$event","_richContent$event2","addMessage","updateAgentMessage","richContent","item","id","name","Button","_jsxs","children","_jsx","href","rel","onClick","link","target","icon","className","style","color","Info","_ref","_info$image","info","actionLink","textDecoration","image","src","rawUrl","title","subtitle","Option","xmlns","fill","height","viewBox","width","d","Chips","_ref2","chips","options","map","opt","Description","description","line","ListItem","List","list","items","Accordion","_accordion$image","_accordion$image$src","accordion","setOpen","useState","ContentCard","message","contentList","payload","sanitizedContent","i","length","content","push","_Fragment","renderRichContent","isAccordion","isImage","alt","accessibilityText","isInfo","isDescription","isList","isButton","chipObj","Text","TypedMessage","ChatIcon","url","maskUnits","x","y","fillRule","clipRule","mask","CloseIcon","App","domElement","chatTitle","chatIcon","expand","attributes","attribute","getAttributes","setValue","error","setError","messages","setMessages","messagesEndRef","useRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","useEffect","setTimeout","fromEvent","prevMessages","stringify","messagesCopy","filter","m","queryResult","messageSent","responseMessages","lastAgentIndex","responseMessage","_responseMessage$text","responseText","undefined","_message$text","addUserMessage","textVal","renderMessage","ref","onKeyDown","key","onChange","placeholder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","interval","setInterval","messengerDivs","document","querySelectorAll","clearInterval","forEach","Div","ReactDOM","render","React","StrictMode"],"mappings":"mNAEO,MAAMA,EAASC,IAAOC,MAAM;;;;;;;;;;;EAiBtBC,EAAYF,IAAOG,GAAmB;;;;;;;aAOtCC,GAASA,EAAMC,OAAS,IAAM;;;;;eAK5BD,GAASA,EAAMC,OAAS,0CAA4C;yDAC1BD,GAASA,EAAMC,OAAS,GAAI;EAGxEC,EAAWN,IAAOG,GAAG;;;;;;;;;;;;EAcrBI,EAAaP,IAAOG,GAAG;;;;;;;EASvBK,EAAqBR,IAAOG,GAAG;;;;;EAO/BM,EAAcT,IAAOG,GAAG;;;;;;;;;;;;;EAe/BO,EAAUV,IAAOG,GAAG;;;;;;;;;EAWpBQ,EAAkBC,GAAS;;;;EAMpBC,EAAcb,YAAOU,EAAQ;;;;;eAK3BC;;EAIFG,EAAed,YAAOU,EAAQ;;;;eAI5BC;;EAIFI,EAAkBf,IAAOG,GAAG;;;;;;EAQ5Ba,EAAahB,IAAOG,GAAG;;;;;;;EASvBc,EAAYjB,IAAOkB,KAAK;;;;;;EAYxBC,EAAWnB,IAAOoB,GAAc;;;;;;eAM9BhB,GAASA,EAAMiB,QAAU,eAAiB;;;;;;EAQ5CC,EAAUtB,IAAOoB,GAAc;;;aAG/BhB,GAASA,EAAMiB,QAAU,IAAM;;;;;EAO/BE,EAAavB,IAAOwB,GAAc;;;aAGlCpB,GAASA,EAAMiB,QAAU,IAAM;;;;;EAO/BI,EAAWzB,IAAOoB,GAAc;;;aAGhChB,GAASA,EAAMiB,QAAU,IAAM;eAC7BjB,GAASA,EAAMiB,QAAU,GAAK;;;;EAMhCK,EAAO1B,IAAO2B,CAAC;;;;;;;;;;;EAafC,EAAgB5B,IAAOG,GAAG;;;;EAM1B0B,EAAa7B,IAAOG,GAAG;;EAIvB2B,EAAQ9B,IAAOwB,GAAG;;;;;EAOlBO,EAAgB/B,IAAOG,GAAG;;;;;;;EAS1B6B,EAAYhC,IAAOwB,GAAG;;;;;;EAQtBS,EAAoBjC,IAAOG,GAAG;;EAI9B+B,EAAuBlC,IAAOG,GAAG;;;;;;;EASjCgC,EAAmBnC,IAAOG,GAAG;;;;;EAO7BiC,EAAkBpC,IAAOG,GAAG;;;;;EAO5BkC,EAAQrC,IAAOG,GAAG;;;EAKlBmC,EAAWtC,IAAOG,GAAG;;;EAKrBoC,EAAUvC,IAAOwC,EAAE;;;;EAMnBC,EAAoBzC,IAAOG,GAAG;;;;;;;;;EAW9BuC,EAAqB1C,IAAOG,GAAG;;;;;;;;;;;EAa/BwC,EAAS3C,IAAOC,MAAM;;;;;;EAQtB2C,EAAU5C,IAAOG,GAAG;;EAIpB0C,EAAe7C,IAAOG,GAAG;;;;EAMzB2C,EAAiB9C,IAAOwB,GAAG;;;;EAM3BuB,EAAc/C,IAAOG,GAAG;;;;EAMxB6C,EAAiBhD,YAAOqC,EAAM;;;;EAK9BY,EAAoBjD,YAAOsC,EAAS;;;EASpCY,EAAgBlD,IAAOoB,GAAmB;;;;sBAIjChB,GAASA,EAAM+C,KAAO,IAAM;qCACb/C,GAASA,EAAM+C,KAAO,MAAQ;EAGtDC,EAAUpD,IAAOG,GAAmB;gBACjCC,GAASA,EAAM+C,KAAO,UAAY;gBAClC/C,GAASA,EAAM+C,KAAO,OAAS;;;sCAGT/C,GAASA,EAAM+C,KAAO,MAAQ;EAGvDE,EAAgBrD,IAAOG,GAAG;;EAI1BmD,EAAOtD,IAAO2B,CAAC;;;;;;;;;;;;;;;;;EAmBf4B,EAAYvD,IAAOwB,GAAG;;;;EAMtBgC,EAAWxD,IAAOoB,GAAG;;;;;EAWrBqC,EAAQzD,IAAOG,GAAe;;;;;;;;;;;aAW9BC,GAASA,EAAM+C,KAAO,MAAQ;;;;eAI5B/C,GAASA,EAAM+C,KAAO,gBAAkB;;;ECpY1CO,GAAWC,GACA,UAAfA,EAAMC,KAeFC,GAAiBF,GACN,SAAfA,EAAMC,MAAmB,aAAcD,EAOnCG,GAAiBH,IACpBE,GAAcF,G,wBCnDjB,MAAMI,GAAiBC,MAAOC,EAAgBC,EAAuBC,EAAgBC,KAC1F,MAAMC,EAAWD,EAAQ,CACvBA,MAAO,CACLA,MAAOD,IAEP,CACFG,KAAM,CACJA,KAAMH,IAIV,IACE,MAAMI,QAA6BC,KAAMC,KAAaR,EAAQ,CAC5DS,WAAY,IACPL,EACHH,aAA0B,OAAZA,QAAY,IAAZA,IAAgB,QAIlC,IAAIS,EAAqB,EACzB,KAAyD,MAAlDJ,EAAqBK,KAAKD,IAC/BA,IAIF,OAFqBE,KAAKC,MAAMP,EAAqBK,KAAKG,OAAOJ,GAGnE,CAAE,MAAOK,GAEP,OADAC,QAAQC,IAAKF,EAAYG,UAClB,CAAC,CACV,G,YClBK,MA+CMC,GAAkBpB,UAA+C,IAADqB,EAAAC,EAC3E,MAAM,OAACrB,EAAM,aAAEC,EAAY,WAAEqB,EAAU,mBAAEC,GAAsBpF,EAEzDqF,EFNC,WEM2BrF,EAASA,EAAMH,OAASG,EAAMsF,KAEhEH,EAAW,CAAC3B,KAAM,QAASU,KAAM,MAAOqB,GAAqB,QAAnBN,EAAEI,EAAYrB,aAAK,IAAAiB,OAAA,EAAjBA,EAAmBO,OAG/DJ,QADuBzB,GAAeE,EAAQC,EAA+B,QAAnBoB,EAAEG,EAAYrB,aAAK,IAAAkB,OAAA,EAAjBA,EAAmBM,MAAM,IACxD,EAAK,EChEvBC,GAAUzF,IACrB,MAAM,OAACH,GAAUG,EAEjB,OACE0F,gBAAA,OAAAC,SAAA,CACEC,eAAA,QAAMC,KAAK,0DAA0DC,IAAI,eACzEJ,gBAACpE,EAAI,CAACyE,QAASA,IAAMf,GAAgBhF,GAAQ6F,KAAMhG,EAAOmG,KAAMC,OAAO,SAAQN,SAAA,CAC5E9F,EAAOqG,MACNN,eAACpE,EAAa,CAAAmE,SACZC,eAAA,QAAMO,UAAU,iBAAiBC,MAAO,CAACC,MAAOxG,EAAOqG,KAAKG,OAAOV,SAChE9F,EAAOqG,KAAK1C,SAInBoC,eAACnE,EAAU,CAAAkE,SACR9F,EAAOqE,YAGR,ECnBGoC,GAAOC,IAA+B,IAADC,EAAA,IAA7B,KAACC,GAAuBF,EAE3C,OACEX,eAAA,KAAGC,KAAMY,EAAKC,WAAYN,MAAO,CAACO,eAAgB,QAASb,IAAI,aAAaG,OAAO,SAAQN,SACzFD,gBAAC/D,EAAa,CAAAgE,SAAA,CACXc,EAAKG,OACJhB,eAAChE,EAAS,CAACiF,IAAe,QAAZL,EAAEC,EAAKG,aAAK,IAAAJ,OAAA,EAAVA,EAAYK,IAAIC,SAElCpB,gBAAC7D,EAAiB,CAAA8D,SAAA,CAChBC,eAAC3D,EAAK,CAAA0D,SAAEc,EAAKM,QACbnB,eAAC1D,EAAQ,CAAAyD,SAAEc,EAAKO,kBAGlB,ECbFC,GAASV,IAQR,IARS,KAACrC,EAAI,KAAE8B,EAAI,MAAEY,GAQ5BL,EACC,OACEb,gBAACxC,EAAI,CAAC2C,KAAMG,EAAMC,OAAO,SAAQN,SAAA,CAC9BiB,GAAShB,eAACzC,EAAS,CAAC0D,IAAKD,EAAMC,IAAIC,SACnC5C,EAEDwB,gBAACtC,EAAQ,CAAC8D,MAAM,6BAA6BC,KAAK,QAAQC,OAAO,KAAKC,QAAQ,YAAYC,MAAM,KAAI3B,SAAA,CAClGC,eAAA,QAAM2B,EAAE,gBAAgBJ,KAAK,SAC7BvB,eAAA,QAAM2B,EAAE,4IAEL,EAIEC,GAAQC,IAAkC,IAAjC,MAACC,GAA0BD,EAE/C,OACE7B,eAAC3C,EAAa,CAAA0C,SACX+B,EAAMC,QAAQC,KAAIC,GAAOjC,eAACqB,GAAM,CAAC/C,KAAM2D,EAAI3D,KAAM8B,KAAM6B,EAAI7B,KAAMY,MAAOiB,EAAIjB,WAC/D,EC3BPkB,GAAcvB,IAAoD,IAAnD,YAACwB,GAA4CxB,EAEvE,OACEb,gBAAC5D,EAAoB,CAAA6D,SAAA,CACnBC,eAAC7D,EAAgB,CAAA4D,SAAEoC,EAAYhB,QAC9BgB,EAAY7D,KAAK0D,KAAII,GAAQpC,eAAC5D,EAAe,CAAA2D,SAAEqC,QAC3B,ECLrBC,GAAYjI,IAChB,MAAM,KAACsF,GAAQtF,EAEf,OACE0F,gBAACrD,EAAiB,CAAC0D,QAASA,IAAMf,GAAgBhF,GAAO2F,SAAA,CACvDC,eAAC3D,EAAK,CAAA0D,SAAEL,EAAKyB,QACbnB,eAAC1D,EAAQ,CAAAyD,SAAEL,EAAK0B,aACE,EAIXkB,GAAQlI,IACnB,MAAM,KAACmI,GAAQnI,EAEf,OACE4F,eAAA,OAAAD,SACGwC,EAAKC,MAAMR,KAAItC,GACD,YAATA,EACKM,eAACzD,EAAO,IAERyD,eAACqC,GAAQ,IAAKjI,EAAOsF,KAAMA,OAGlC,ECvBG+C,GAAY9B,IAA8C,IAAD+B,EAAAC,EAAA,IAA5C,UAACC,GAAsCjC,EAC/D,MAAOxD,EAAM0F,GAAWC,oBAAS,GAEjC,OACEhD,gBAACpD,EAAkB,CAAAqD,SAAA,CACjBD,gBAACnD,EAAM,CAACwD,QAASA,IAAM0C,GAAS1F,GAAM4C,SAAA,CACpCD,gBAAClD,EAAO,CAAAmD,SAAA,CACL6C,EAAU5B,OACThB,eAACnD,EAAY,CAAAkD,SACXC,eAAClD,EAAc,CAACmE,IAAoB,QAAjByB,EAAEE,EAAU5B,aAAK,IAAA0B,GAAK,QAALC,EAAfD,EAAiBzB,WAAG,IAAA0B,OAAL,EAAfA,EAAsBzB,WAG/CpB,gBAAC/C,EAAW,CAAAgD,SAAA,CACVC,eAAChD,EAAc,CAAA+C,SAAE6C,EAAUzB,QAC3BnB,eAAC/C,EAAiB,CAAA8C,SAAE6C,EAAUxB,iBAGlCpB,eAAA,OAAAD,SAEED,gBAAC5C,EAAa,CAACC,KAAMA,EAAMmE,MAAM,6BAA6BE,OAAO,OAAOC,QAAQ,YAAYC,MAAM,OAAOH,KAAK,UAASxB,SAAA,CACzHC,eAAA,QAAM2B,EAAE,kBAAkBJ,KAAK,SAC/BvB,eAAA,QAAM2B,EAAE,wDAId3B,eAAC5C,EAAO,CAACD,KAAMA,EAAK4C,SACjB6C,EAAUtE,SAEM,ECxBZyE,GAAcpC,IAMpB,IANqB,QAACqC,EAAO,OAAE/E,EAAM,aAAEC,EAAY,WAAEqB,EAAU,mBAAEC,GAMvEmB,EACC,MAAMsC,EAAcD,EAAQE,QAC5B,IAAKD,EAAa,OAAO,KAEzB,IAAIE,EAAkC,GAClCrB,EAAQ,GACZ,IAAK,IAAIsB,EAAI,EAAGA,EAAIH,EAAYI,OAAQD,IAAK,CAC3C,MAAME,EAAUL,EAAYG,GAC5B,GAAIvF,GAAcyF,GAAU,CAC1B,IAAId,EAAqC,GACzC,KAAQY,EAAIH,EAAYI,OAAQD,IAAK,CACnC,MAAM1D,EAAOuD,EAAYG,GACzB,GTegB,YSfF1D,ETeP9B,KSdL4E,EAAMe,KAAK,eACN,KAAI1F,GAAc6B,GAElB,CACL0D,IACA,KACF,CAJEZ,EAAMe,KAAK7D,EAIb,CACF,CACAyD,EAAiBI,KAAK,CAAC3F,KAAM,OAAQ4E,SACvC,MAAW9E,GAAQ4F,GACjBxB,EAAMyB,KAAKD,GACFxF,GAAcwF,IACvBH,EAAiBI,KAAKD,EAE1B,CAEA,OACExD,gBAAA0D,YAAA,CAAAzD,SAAA,CACGoD,EAAiBE,OAAS,GACzBrD,eAACjF,EAAe,CAAAgF,SACboD,EAAiBnB,KAAI,CAACtC,EAAM0D,IPvBNK,EAC/B9F,EACAyF,EACAnF,EACAsB,EACAC,EACAtB,IFkB0BP,IACJ,cAAfA,EAAMC,KEjBT8F,CAAY/F,GAAeqC,eAACyC,GAAS,CAASG,UAAWjF,GAAdyF,GFZzBzF,IACA,UAAfA,EAAMC,KEYT+F,CAAQhG,GAAeqC,eAAClE,EAAK,CAAS8H,IAAKjG,EAAMkG,kBAAmB5C,IAAKtD,EAAMuD,QAA5CkC,GFTlBzF,IACC,SAAfA,EAAMC,KESTkG,CAAOnG,GAAeqC,eAACU,GAAI,CAASG,KAAMlD,GAATyF,GACjC1F,GAAQC,GAAeqC,eAAC4B,GAAK,CAASE,MAAOnE,GAAVyF,GFHXzF,IACN,gBAAfA,EAAMC,KEGTmG,CAAcpG,GAAeqC,eAACkC,GAAW,CAASC,YAAaxE,GAAhByF,GFA9BzF,IACC,SAAfA,EAAMC,KEAToG,CAAOrG,GACTqC,eAACsC,GAAI,CAEHC,KAAM5E,EACNM,OAAQA,EACRC,aAAcA,EACdqB,WAAYA,EACZC,mBAAoBA,GALf4D,GFvBczF,IACD,WAAfA,EAAMC,KE8BTqG,CAAStG,GACXqC,eAACH,GAAM,CAEL5F,OAAQ0D,EACRM,OAAQA,EACRC,aAAcA,EACdqB,WAAYA,EACZC,mBAAoBA,GALf4D,QAFT,EOA2CK,CAAkB/D,EAAM0D,EAAGnF,EAAQsB,EAAYC,EAAoBtB,OAGzG4D,EAAME,KAAI,CAACkC,EAASd,IAAMpD,eAAC4B,GAAK,CAASE,MAAOoC,GAAVd,OACtC,EChDMe,GAAOxD,IAAoC,IAAnC,QAACqC,GAA4BrC,EAChD,MAAMyD,EAAgC,SAAjBpB,EAAQpF,KAAkB/C,EAAcC,EAE7D,OACEkF,eAACoE,EAAY,CAAArE,SACViD,EAAQ1E,MACI,ECPN+F,GAAW1D,IAAuD,IAAtD,QAACtF,EAAO,IAAEiJ,GAAsC3D,EACvE,OAAO2D,EACLtE,eAACzE,EAAU,CAACF,QAASA,EAAS4F,IAAKqD,IAIjCxE,gBAACxE,EAAO,CAACD,QAASA,EAASqG,MAAM,KAAKF,OAAO,KAAKC,QAAQ,YAAYF,KAAK,OAAOD,MAAM,6BAA4BvB,SAAA,CAClHC,eAAA,QAAML,GAAG,QAAQ,YAAU,QAAQ4E,UAAU,iBAAiBC,EAAE,IAAIC,EAAE,IAAI/C,MAAM,KAAKF,OAAO,KAAIzB,SAC9FC,eAAA,QAAM0E,SAAS,UAAUC,SAAS,UAAUhD,EAAE,wUAAwUJ,KAAK,YAE7XvB,eAAA,KAAG4E,KAAK,cAAa7E,SACnBC,eAAA,QAAM0B,MAAM,KAAKF,OAAO,KAAKD,KAAK,cAGvC,EAGQsD,GAAYhD,IAAoC,IAAnC,QAACxG,GAA4BwG,EAErD,OACE/B,gBAACrE,EAAQ,CAACJ,QAASA,EAASsE,GAAG,WAAW6B,OAAO,KAAKC,QAAQ,YAAYC,MAAM,KAAKJ,MAAM,6BAA4BvB,SAAA,CACrHC,eAAA,QAAM2B,EAAE,0GAER3B,eAAA,QAAM2B,EAAE,gBAAgBJ,KAAK,WACpB,ECoJAuD,OA3Jf,SAAYnE,GAA2C,IAA1C,WAAEoE,GAAqCpE,EAClD,MACE,aAAcqE,EACd,gBAAiB9G,EACjB,UAAWD,EACX,YAAagH,EACb,OAAUC,GVZgBH,KAC5B,IAAII,EAAsC,CAAC,EAC3C,IAAK,IAAI/B,EAAI,EAAGA,EAAI2B,EAAWI,WAAW9B,OAAQD,IAAK,CACrD,MAAMgC,EAAYL,EAAWI,WAAWzF,KAAK0D,GACzCgC,IACFD,EAAWC,EAAUxF,MAAQwF,EAAUjH,MAE3C,CACA,OAAOgH,CAAU,EUKbE,CAAcN,IAEX5H,EAAM0F,GAAWC,mBAAmB,MAAVoC,IAC1B/G,EAAOmH,GAAYxC,mBAAS,KAC5ByC,EAAOC,GAAY1C,oBAAS,IAC5B2C,EAAUC,GAAe5C,mBAAoB,IAE9C6C,EAAiBC,iBAAuB,MAExCC,EAAiBA,KAAO,IAADC,EACL,QAAtBA,EAAAH,EAAeI,eAAO,IAAAD,GAAtBA,EAAwBE,eAAe,CAAEC,SAAU,UAAW,EAGhEC,qBAAU,KACJX,GACFY,YAAW,KACTX,GAAS,EAAM,GACd,IACL,GACC,CAACD,IAEJ,MAAM/F,EAAqBA,CAACL,EAAuBiH,KACjDV,GAAYW,IACV,GAAiC,OAA7BxH,KAAKyH,UAAUnH,GAAoB,CACrC,MAAMoH,EAAeF,EAAaG,QAAOC,GAAgB,QAAXA,EAAEnI,OAEhD,OADAkH,GAAS,GACFe,CACT,CACA,MAAMA,EAAe,IAAIF,IAEnB,YAACK,GAAevH,GACfb,KAAMqI,EAAc,GAAE,iBAAEC,EAAmB,IAAMF,EAExD,IAAIG,EAAiBN,EAAalD,OAAS,EAC3C,KAAOwD,EAAiB,IACtBT,EACwC,QAAtCG,EAAaM,GAAgBvI,KAE7BiI,EAAaM,GAAgBlH,KAAOgH,IAEtCE,IAGF,GAAIN,EAAaM,GAAgBlH,KAAOgH,GAAgBP,GAAmD,QAAtCG,EAAaM,GAAgBvI,KAAiB,CACjH,MAAMwI,EAAkBF,EAAiB,GAEzC,GAAIE,EAAgBxI,KAAM,CAAC,IAADyI,EACxB,MAAMC,EAA8B,OAAfF,QAAe,IAAfA,GAAqB,QAANC,EAAfD,EAAiBxI,YAAI,IAAAyI,OAAN,EAAfA,EAAuBzI,KAC5CiI,EAAaM,GAAgBvI,KAAO0I,EAAa,GACjDT,EAAaM,GAAgBlH,QAAKsH,CACpC,MAAO,GAAIH,EAAgB5D,QAAS,CAClC,MAAM,YAACzD,EAAc,IAAMqH,EAAgB5D,QACrCD,EAAcxD,EAAY,GAChC8G,EAAaM,GAAgBvI,UAAO2I,EACpCV,EAAaM,GAAgBlH,QAAKsH,EAClCV,EAAaM,GAAgB3D,QAAUD,CACzC,CAEF,CAEA,IAAK,IAAIG,EAAI,EAAGA,EAAIwD,EAAiBvD,OAAQD,IAAK,CAChD,MAAMJ,EAAU4D,EAAiBxD,GAEjC,GAAIJ,EAAQ1E,KAAM,CAAC,IAAD4I,EAChB,MAAMF,EAAsB,OAAPhE,QAAO,IAAPA,GAAa,QAANkE,EAAPlE,EAAS1E,YAAI,IAAA4I,OAAN,EAAPA,EAAe5I,KACpC0I,GAAgBT,EAAahD,KAAK,CAAC3F,KAAM,QAASU,KAAM0I,EAAa,IACvE,MAAO,GAAIhE,EAAQE,QAAS,CAC1B,MAAM,YAACzD,EAAc,IAAMuD,EAAQE,QAC7BD,EAAcxD,EAAY,GAChCwD,GAAesD,EAAahD,KAAK,CAAC3F,KAAM,QAASsF,QAASD,GAC5D,CAEF,CACA,OAAOsD,CAAY,IAGrBV,GAAgB,EAGZsB,EAAiBnJ,UACrB,MAAMoJ,EAAUjJ,EAChBoB,EAAW,CAAC3B,KAAM,OAAQU,KAAM8I,IAChC7H,EAAW,CAAC3B,KAAM,QAASU,KAAM,MAAOqB,GAAIyH,IAE5C,MAAMjI,QAAiBpB,GAAeE,EAAQC,EAAcC,GAC5Dc,QAAQC,IAAIC,GACZK,EAAmBL,EAAS,EAGxBI,EAAasC,IAAgC,IAA/B,KAACjE,EAAI,KAAEU,EAAI,GAAEqB,GAAYkC,EAC3C6D,GAAYW,GAAiB,IAAIA,EAAc,CAACzI,OAAMU,OAAMqB,SAC5D2F,EAAS,GAAG,EAsBd,OAnBAY,qBAAU,KACRL,GAAgB,GACf,CAACJ,EAASpC,SAkBXvD,gBAAA,OAAKS,UAAU,MAAKR,SAAA,CAClBD,gBAAC5F,EAAS,CAACG,OAAQ8C,EAAK4C,SAAA,CACtBC,eAAC1F,EAAQ,CAAAyF,SACNiF,IAEHhF,eAACzF,EAAU,CAAAwF,SACTD,gBAACtF,EAAkB,CAAAuF,SAAA,CACjBC,eAACvC,EAAK,CAACN,KAAMoI,EAAMxF,SAAC,4CAGpBD,gBAACrF,EAAW,CAAAsF,SAAA,CACT0F,EAASzD,KAAI,CAACgB,EAASI,IArBdiE,EAACrE,EAAkBI,IACnCJ,EAAQ1E,KACH0B,eAACmE,GAAI,CAASnB,QAASA,GAAZI,GACTJ,EAAQE,QACVlD,eAAC+C,GAAW,CAASC,QAASA,EAAS/E,OAAQA,EAAQsB,WAAYA,EAAYC,mBAAoBA,EAAoBtB,aAAcA,GAAnHkF,GAEpB,KAeiCiE,CAAcrE,EAASI,KAErDpD,eAAA,OAAKsH,IAAK3B,YAIhB7F,gBAAC9E,EAAU,CAAA+E,SAAA,CACTC,eAAC/E,EAAS,CAAC0E,GAAG,aAAa/B,KAAK,OAAOO,MAAOA,EAAOoJ,UAlCtCnJ,IACH,UAAdA,EAAMoJ,KACRL,GACF,EA+BqFM,SAAWrJ,GAAUkH,EAASlH,EAAMiC,OAAOlC,OAAQuJ,YAAY,qBAC9I1H,eAAA,OAAKG,QAASA,IAAMgH,IAAiBpH,SACnCC,eAAC7E,EAAQ,CAACE,QAAS8C,EAAMkF,OAAS,EAAEtD,SAClCC,eAAA,QAAM2B,EAAE,oDAKhB7B,gBAAC/F,EAAM,CAACoG,QAASA,IAAM0C,GAAS1F,GAAM4C,SAAA,CACpCC,eAACqE,GAAQ,CAACC,IAAKW,EAAU5J,SAAU8B,IACnC6C,eAAC6E,GAAS,CAACxJ,QAAS8B,SAI5B,EChKewK,OAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAKnH,IAAkD,IAAjD,OAAEoH,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASxH,EACpEoH,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EAAY,GAExB,ECHF,IAAIQ,GAAWC,aAAY,KACzB,MAAMC,EAAgBC,SAASC,iBAAiB,gBAC5CF,EAAcjF,QAAQoF,cAAcL,IAExCE,EAAcI,SAAQC,IACpBC,IAASC,OACP7I,eAAC8I,IAAMC,WAAU,CAAAhJ,SACfC,eAAC8E,GAAG,CAACC,WAAY4D,MAEnBA,EACD,GACD,GACD,KAIHhB,I","file":"static/js/main.5b36341e.chunk.js","sourcesContent":["import styled, {keyframes} from 'styled-components';\n\nexport const Widget = styled.button`\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  width: 56px;\n  height: 56px;\n  border-radius: 50%;\n  border: none;\n  box-shadow: rgb( 0 0 0 / 24%) 1px 4px 15px 0px;\n  cursor: pointer;\n  background-color: #42A5F5;\n`;\n\ninterface MessengerProps {\n  opened: boolean\n}\n\nexport const Messenger = styled.div<MessengerProps>`\n  position: fixed;\n  bottom: 105px;\n  right: 20px;\n  width: 370px;\n  height: 560px;\n  background-color: #e5e5e5;\n  opacity: ${props => props.opened ? \"1\" : \"0\"};\n  border-radius: 4px;\n  display: flex;\n  flex-direction: column;\n  box-shadow: 1px 4px 15px 0px rgb(0 0 0 / 0.24);\n  transform: ${props => props.opened ? 'translate3d(0px, 0px, 0px) scale(1, 1);' : 'translateX(25%) translateY(35%) scale(0.5, 0.5)'};\n  transition: transform 0.2s ease, opacity 0.2s ease-in${props => props.opened ? '': ', height 0s ease 0.2s'};\n`;\n\nexport const TitleBar = styled.div`\n  height: 50px;\n  min-height: 50px;\n  padding-left: 16px;\n  display: flex;\n  align-items: center;\n  border-radius: 5px 5px 0 0;\n  color: white;\n  background-color: #42a5f5;\n  box-shadow: 0px 3px 6px 0px #00000029;\n  font-family: 'Roboto', sans-serif;\n  font-size: 18px;\n`;\n\nexport const TextWindow = styled.div`\n  min-height: 0;\n  background-color: #fafafa;\n  display: flex;\n  flex-direction: column;\n  flex: 1 1 auto;\n  min-width: 250px;\n`;\n\nexport const MessageListWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1 1 auto;\n  min-height: 0;\n`;\n\nexport const MessageList = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1 1;\n  padding: 10px;\n  overflow-x: hidden;\n  overflow-y: scroll;\n\n  > * {\n    &:first-child {\n      margin-top: auto !important;\n    }\n  }\n`;\n\nconst Message = styled.div`\n  border-radius: 20px;\n  border: 1px solid #e0e0e0;\n  padding: 7px 16px;\n  margin-top: 10px;\n  align-self: flex-end;\n  background-color: white;\n  font-family: 'Roboto', sans-serif;\n  font-size: 14px;\n`;\n\nconst presentYourself = keyframes`\n  100% {\n    opacity: 1;\n  }\n`;\n\nexport const UserMessage = styled(Message)`\n  background-color: #ddd;\n  margin-left: 75px;\n  align-self: flex-end;\n\n  animation: ${presentYourself} 0.3s ease 0.1s forwards;\n  opacity: 0;\n`;\n\nexport const AgentMessage = styled(Message)`\n  margin-right: 75px;\n  align-self: flex-start;\n\n  animation: ${presentYourself} 0.3s ease 0.1s forwards;\n  opacity: 0;\n`;\n\nexport const RichContentCard = styled.div`\n  background-color: white;\n  border: 1px solid #e0e0e0;\n  border-radius: 8px;\n  box-shadow: 0px 2px 2px 0px rgb(0 0 0 / 24%);\n  margin-top: 10px;\n`;\n\nexport const InputField = styled.div`\n  height: 50px;\n  background-color: white;\n  border-top: 1px solid #eeeeee;\n  display: flex;\n  font-family: 'Roboto', sans-serif;\n  border-radius: 0 0 5px 5px;\n`;\n\nexport const TextInput = styled.input`\n  padding-left: 16px;\n  font-size: 14px;\n  width: 100%;\n  border: none;\n  outline: none;\n`;\n\ninterface IconProps {\n  visible: boolean\n}\n\nexport const SendIcon = styled.svg<IconProps>`\n  cursor: pointer;\n  fill: #42A5F5;\n  height: 24px;\n  width: 24px;\n  margin: 15px;\n  transform: ${props => props.visible ? 'scale(1, 1);' : 'scale(0.01, 0.01);'}\n  transition: 0.3s ease;\n\n  &:hover {\n    fill: green;\n  }\n`;\n\nexport const ChatSVG = styled.svg<IconProps>`\n  height: 36px;\n  left: 10px;\n  opacity: ${props => props.visible ? '1' : '0'};\n  position: absolute;\n  top: 10px;\n  transition: opacity 0.5s;\n  width: 36px;\n`;\n\nexport const CustomIcon = styled.img<IconProps>`\n  height: 36px;\n  left: 10px;\n  opacity: ${props => props.visible ? '1' : '0'};\n  position: absolute;\n  top: 10px;\n  transition: opacity 0.5s;\n  width: 36px;\n`;\n\nexport const CloseSVG = styled.svg<IconProps>`\n  fill: white;\n  left: 15px;\n  opacity: ${props => props.visible ? '1' : '0'};\n  transform: ${props => props.visible ? '' : 'rotate(-90deg);'};\n  position: absolute;\n  top: 15px;\n  transition: transform 0.5s, opacity 0.5s;\n`;\n\nexport const Link = styled.a`\n  align-items: center;\n  background: white;\n  border-radius: 8px;\n  color: black;\n  cursor: pointer;\n  display: flex;\n  font-family: 'Roboto', sans-serif;\n  font-size: 14px;\n  padding: 12px 12px;\n  text-decoration: none;\n`\n\nexport const IconContainer = styled.div`\n  height: 24px;\n  width: 24px;\n  margin-right: 12px;\n`;\n\nexport const ButtonText = styled.div`\n\n`;\n\nexport const Image = styled.img`\n  background: url(\"dist/images/progress_spinner_grey.gif\") 50% no-repeat;\n  borderRadius: 8px;\n  borderStyle: none;\n  width: 100%;\n`;\n\nexport const InfoContainer = styled.div`\n  background-color: white;\n  border-radius: 8px;\n  display: flex;\n  font-family: 'Roboto', sans-serif;\n  font-size: 14px;\n  padding: 16px;\n`;\n\nexport const InfoImage = styled.img`\n  background-repeat: no-repeat;\n  background-size: contain;\n  margin-right: 24px;\n  max-height: 24px;\n  max-width: 24px;\n`;\n\nexport const InfoTextContainer = styled.div`\n  display: block;\n`;\n\nexport const DescriptionContainer = styled.div`\n  background-color: white;\n  border-radius: 8px;\n  display: flex;\n  flex-direction: column;\n  font-family: 'Roboto', sans-serif;\n  padding: 16px;\n`;\n\nexport const DescriptionTitle = styled.div`\n  color: black;\n  font-size: 14px;\n  font-weight: bold;\n\n`;\n\nexport const DescriptionLine = styled.div`\n  color: rgba(0,0,0,0.87);\n  font-size: 14px;\n  padding-top: 8px;\n  word-break: break-word;\n`;\n\nexport const Title = styled.div`\n  color: black;\n  font-weight: bold;\n`;\n\nexport const SubTitle = styled.div`\n  color: #757577;\n  padding-top: 8px;\n`;\n\nexport const Divider = styled.hr`\n  border: 0;\n  border-top: 1px solid #e0e0e0;\n  margin: 0;\n`\n\nexport const ListItemContainer = styled.div`\n  background: linear-gradient( to left, rgba(216,209,213) 0%, rgba(177,166,177) 47%, rgba(216,209,213) 100% ) left bottom white no-repeat;\n  background-size: 100% 1px;\n  border-radius: 8px;\n  cursor: pointer;\n  display: block;\n  font-family: 'Roboto', sans-serif;\n  font-size: 14px;\n  padding: 16px;\n`;\n\nexport const AccordionContainer = styled.div`\n  background: white;\n  border-radius: 8px;\n  color: black;\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  font-family: 'Roboto', sans-serif;\n  font-size: 14px;\n  padding: 12px 12px;\n  text-decoration: none;\n`;\n\nexport const TopRow = styled.button`\n  display: flex;\n  justify-content: space-between;\n  background-color: white;\n  border: none;\n  cursor: pointer;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n`\n\nexport const ImageContent = styled.div`\n  flex-direction: column;\n  justify-content: center;\n  overflow: hidden;\n`;\n\nexport const AccordionImage = styled.img`\n  border-radius: 3px;\n  margin-right: 10px;\n  max-width: 47px;\n`;\n\nexport const TextContent = styled.div`\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: space-evenly;\n`;\n\nexport const AccordionTitle = styled(Title)`\n  word-break: break-word;\n  word-wrap: break-word;\n  text-align: left;\n`\nexport const AccordionSubTitle = styled(SubTitle)`\n  word-break: break-word;\n  word-wrap: break-word;\n`\n\ninterface AccordionProps {\n  open: Boolean\n}\n\nexport const AccordionIcon = styled.svg<AccordionProps>`\n  font-size: 32px;\n  padding: 7px 0;\n  color: #757575;\n  transform: rotate(${props => props.open ? \"-\" : \"\"}90deg);\n  transition: transform 0.15s ease-${props => props.open ? \"out\" : \"in\"};\n`;\n\nexport const TextRow = styled.div<AccordionProps>`\n  max-height: ${props => props.open ? \"inherit\" : \"0\"};\n  margin-top: ${props => props.open ? \"10px\" : \"0\"};\n  margin-left: 4px;\n  overflow: hidden;\n  transition: max-height 0.25s ease-${props => props.open ? \"out\" : \"in\"};\n`;\n\nexport const ChipContainer = styled.div`\n  padding: 10px;\n`\n\nexport const Chip = styled.a`\n  align-items: center;\n  background-color: white;\n  border-radius: 20px;\n  border: 1px solid;\n  border-color: #e0e0e0;\n  box-shadow: 0px 2px 2px 0px rgb(0 0 0 / 24%);\n  color: black;\n  cursor: pointer;\n  display: inline-flex;\n  font-family: 'Roboto', sans-serif;\n  font-size: 14px;\n  height: 35px;\n  margin: 0 10px 10px 0;\n  padding: 0 16px;\n  text-decoration: none;\n  vertical-align: bottom;\n`;\n\nexport const ChipImage = styled.img`\n  margin-right: 8px;\n  max-height: 17.5px;\n  max-width: 17.5px;\n`;\n\nexport const Redirect = styled.svg`\n  display: inline-block;\n  height: 15px;\n  margin-left: 8px;\n  width: 15px;\n`;\n\ninterface ErrorProps {\n  open: Boolean\n}\n\nexport const Error = styled.div<ErrorProps>`\n  align-items: center;\n  align-self: center;\n  background-color: black;\n  box-shadow: 1px 4px 15px 0 rgb(0 0 0 / 24%);\n  color: white;\n  display: flex;\n  font-family: 'Roboto', sans-serif;\n  font-size: 12px;\n  justify-content: center;\n  margin-top: 0;\n  opacity: ${props => props.open ? '0.8' : '0'};\n  padding: 10px;\n  position: absolute;\n  transition: transform 0.2s, opacity 0.2s;\n  transform: ${props => props.open ? 'translateY(0)' : 'translateY(-100%);'};\n  width: 95%;\n  z-index: 1;\n`;\n","import {\n  Accordion,\n  Button,\n  Chips,\n  Image,\n  Description,\n  Divider,\n  Info,\n  List,\n  PayloadList,\n  RichContent,\n  RichContentPayload,\n  ListItemProps,\n  ButtonProps\n} from \"./types\";\n\nexport const isButton = (param: RichContentPayload): param is Button => {\n  return param.type === 'button';\n}\n\nexport const isImage = (param: RichContentPayload): param is Image => {\n  return param.type === 'image';\n}\n\nexport const isInfo = (param: RichContentPayload): param is Info => {\n  return param.type === 'info';\n}\n\nexport const isChips = (param: RichContentPayload): param is Chips => {\n  return param.type === 'chips';\n}\n\nexport const isDescription = (param: RichContentPayload): param is Description => {\n  return param.type === 'description';\n}\n\nexport const isList = (param: RichContentPayload): param is List => {\n  return param.type === 'list';\n}\n\nexport const isDivider = (param: RichContentPayload): param is Divider => {\n  return param.type === 'divider';\n}\n\nexport const isPayloadList = (param: RichContentPayload): param is PayloadList => {\n  return param.type === 'list' && 'subtitle' in param;\n}\n\nexport const isAccordion = (param: RichContentPayload): param is Accordion => {\n  return param.type === 'accordion';\n}\n\nexport const isRichContent = (param: RichContentPayload): param is RichContent => {\n  return !isPayloadList(param);\n}\n\nexport const isButtonProps = (param: ButtonProps | ListItemProps): param is ButtonProps => {\n  return 'button' in param;\n}\n","import axios from \"axios\"\n\nexport const handleResponse = async (apiURI: string, languageCode?: string, value?: string, event?: boolean) => {\n  const queryObj = event ? {\n    event: {\n      event: value\n    }\n  } : {\n    text: {\n      text: value\n    }\n  }\n\n  try {\n    const addUserMessageResult = await axios.post<string>(apiURI, {\n      queryInput: {\n        ...queryObj,\n        languageCode: languageCode ?? \"en\"\n      }\n    })\n\n    let JSONBeginningIndex = 0\n    while (addUserMessageResult.data[JSONBeginningIndex] !== '{') {\n      JSONBeginningIndex++\n    }\n    const responseJSON = JSON.parse(addUserMessageResult.data.substr(JSONBeginningIndex))\n\n    return responseJSON\n  } catch (err) {\n    console.log((err as any).response)\n    return {};\n  }\n}\n","import {\n  Button,\n  Info,\n  Chips,\n  Description,\n  List,\n  Accordion,\n} from '../rich-content';\nimport {isButton, isImage, isInfo, isChips, isDescription, isList, isAccordion, isButtonProps} from './typeguards';\nimport {ButtonProps, ListItemProps, Message, RichContent} from './types';\nimport {Image} from '../Styles';\nimport {handleResponse} from './responseHandlers';\n\nexport const getAttributes = (domElement: Element): {[key: string]: string} => {\n  let attributes: {[key: string]: string} = {}\n  for (let i = 0; i < domElement.attributes.length; i++) {\n    const attribute = domElement.attributes.item(i)\n    if (attribute) {\n      attributes[attribute.name] = attribute.value;\n    }\n  }\n  return attributes;\n}\n\nexport const renderRichContent = (\n  param: RichContent,\n  i: number,\n  apiURI: string,\n  addMessage: (message: Message) => void,\n  updateAgentMessage: (r: any) => void,\n  languageCode?: string,\n) => {\n  if (isAccordion(param)) return <Accordion key={i} accordion={param} />\n  if (isImage(param)) return <Image key={i} alt={param.accessibilityText} src={param.rawUrl} />\n  if (isInfo(param)) return <Info key={i} info={param} />\n  if (isChips(param)) return <Chips key={i} chips={param} />\n  if (isDescription(param)) return <Description key={i} description={param} />\n  if (isList(param)) return (\n    <List\n      key={i}\n      list={param}\n      apiURI={apiURI}\n      languageCode={languageCode}\n      addMessage={addMessage}\n      updateAgentMessage={updateAgentMessage}\n    />\n  )\n  if (isButton(param)) return (\n    <Button\n      key={i}\n      button={param}\n      apiURI={apiURI}\n      languageCode={languageCode}\n      addMessage={addMessage}\n      updateAgentMessage={updateAgentMessage}\n    />\n  )\n\n}\n\nexport const addAgentMessage = async (props: ButtonProps | ListItemProps) => {\n  const {apiURI, languageCode, addMessage, updateAgentMessage} = props\n\n  const richContent = isButtonProps(props) ? props.button : props.item;\n\n  addMessage({type: 'agent', text: '...', id: richContent.event?.name})\n\n  const response = await handleResponse(apiURI, languageCode, richContent.event?.name, true)\n  updateAgentMessage(response, true)\n}\n","import {ButtonText, IconContainer, Link} from \"../Styles\";\nimport {addAgentMessage} from '../utilities/utils';\nimport {ButtonProps} from \"../utilities/types\";\n\nexport const Button = (props: ButtonProps) => {\n  const {button} = props\n\n  return (\n    <div>\n      <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\" />\n      <Link onClick={() => addAgentMessage(props)} href={button.link} target='_blank'>\n        {button.icon && (\n          <IconContainer>\n            <span className='material-icons' style={{color: button.icon.color}}>\n              {button.icon.type}\n            </span>\n          </IconContainer>\n        )}\n        <ButtonText>\n          {button.text}\n        </ButtonText>\n      </Link>\n    </div>\n  )\n}\n","import {SubTitle, Title, InfoContainer, InfoTextContainer, InfoImage} from \"../Styles\";\nimport {Info as InfoType} from \"../utilities/types\";\n\nexport const Info = ({info}: {info: InfoType}) => {\n\n  return (\n    <a href={info.actionLink} style={{textDecoration: 'none'}} rel=\"noreferrer\" target='_blank'>\n      <InfoContainer>\n        {info.image &&\n          <InfoImage src={info.image?.src.rawUrl} />\n        }\n        <InfoTextContainer>\n          <Title>{info.title}</Title>\n          <SubTitle>{info.subtitle}</SubTitle>\n        </InfoTextContainer>\n      </InfoContainer>\n    </a>\n  )\n}\n","import {Chip, ChipContainer, ChipImage, Redirect} from \"../Styles\";\nimport {Chips as ChipsType} from \"../utilities/types\";\n\nconst Option = ({text, link, image}: {\n  text: string;\n  link: string;\n  image?: {\n    src: {\n      rawUrl: string\n    }\n  }\n}) => {\n  return (\n    <Chip href={link} target='_blank'>\n      {image && <ChipImage src={image.src.rawUrl} />}\n      {text}\n      {/* Redirect Icon */}\n      <Redirect xmlns=\"http://www.w3.org/2000/svg\" fill=\"black\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n      </Redirect>\n    </Chip>\n  )\n}\n\nexport const Chips = ({chips}: {chips: ChipsType}) => {\n\n  return (\n    <ChipContainer>\n      {chips.options.map(opt => <Option text={opt.text} link={opt.link} image={opt.image} />)}\n    </ChipContainer>\n  )\n}\n","import {DescriptionContainer, DescriptionLine, DescriptionTitle} from \"../Styles\";\nimport {Description as DescriptionType} from \"../utilities/types\";\n\nexport const Description = ({description}: {description: DescriptionType}) => {\n\n  return (\n    <DescriptionContainer>\n      <DescriptionTitle>{description.title}</DescriptionTitle>\n      {description.text.map(line => <DescriptionLine>{line}</DescriptionLine>)}\n    </DescriptionContainer>\n  )\n}\n","import {Divider, ListItemContainer, SubTitle, Title} from \"../Styles\";\nimport {ListItemProps, ListProps} from \"../utilities/types\";\nimport {addAgentMessage} from \"../utilities/utils\";\n\nconst ListItem = (props: ListItemProps) => {\n  const {item} = props\n\n  return (\n    <ListItemContainer onClick={() => addAgentMessage(props)}>\n      <Title>{item.title}</Title>\n      <SubTitle>{item.subtitle}</SubTitle>\n    </ListItemContainer>\n  )\n}\n\nexport const List = (props: ListProps) => {\n  const {list} = props\n\n  return (\n    <div>\n      {list.items.map(item => {\n        if (item === 'DIVIDER') {\n          return <Divider />\n        } else {\n          return <ListItem {...props} item={item} />\n        }\n      })}\n    </div>\n  )\n}\n","import {useState} from \"react\";\nimport {AccordionContainer, AccordionIcon, AccordionImage, AccordionSubTitle, AccordionTitle, Content, ImageContent, TextContent, TextRow, TopRow} from \"../Styles\";\nimport {Accordion as AccordionType} from \"../utilities/types\";\n\nexport const Accordion = ({accordion}: {accordion: AccordionType}) => {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <AccordionContainer>\n      <TopRow onClick={() => setOpen(!open)}>\n        <Content>\n          {accordion.image &&\n            <ImageContent>\n              <AccordionImage src={accordion.image?.src?.rawUrl} />\n            </ImageContent>\n          }\n          <TextContent>\n            <AccordionTitle>{accordion.title}</AccordionTitle>\n            <AccordionSubTitle>{accordion.subtitle}</AccordionSubTitle>\n          </TextContent>\n        </Content>\n        <div>\n          {/* Chevron Right Icon */}\n          <AccordionIcon open={open} xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#455A64\">\n            <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n            <path d=\"M7.59 18.59L9 20l8-8-8-8-1.41 1.41L14.17 12\" />\n          </AccordionIcon>\n        </div>\n      </TopRow>\n      <TextRow open={open}>\n        {accordion.text}\n      </TextRow>\n    </AccordionContainer>\n  )\n}\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport {Dispatch, SetStateAction} from 'react';\nimport {RichContentCard} from '../Styles';\nimport {isPayloadList, isDivider, isChips, isRichContent} from '../utilities/typeguards';\nimport {Message, ListItem, RichContent} from '../utilities/types'\nimport {renderRichContent} from '../utilities/utils'\nimport {Chips} from './Chips';\n\nexport const ContentCard = ({message, apiURI, languageCode, addMessage, updateAgentMessage}: {\n  message: Message,\n  apiURI: string,\n  languageCode?: string,\n  addMessage: (message: Message) => void,\n  updateAgentMessage: (r: any) => void,\n}) => {\n  const contentList = message.payload\n  if (!contentList) return null;\n\n  let sanitizedContent: RichContent[] = []\n  let chips = []\n  for (let i = 0; i < contentList.length; i++) {\n    const content = contentList[i]\n    if (isPayloadList(content)) {\n      let items: Array<'DIVIDER' | ListItem> = []\n      for (i; i < contentList.length; i++) {\n        const item = contentList[i]\n        if (isDivider(item)) {\n          items.push('DIVIDER')\n        } else if (isPayloadList(item)) {\n          items.push(item)\n        } else {\n          i--;\n          break;\n        }\n      }\n      sanitizedContent.push({type: 'list', items})\n    } else if (isChips(content)) {\n      chips.push(content);\n    } else if (isRichContent(content)) {\n      sanitizedContent.push(content);\n    }\n  }\n\n  return (\n    <>\n      {sanitizedContent.length > 0 && (\n        <RichContentCard>\n          {sanitizedContent.map((item, i) => renderRichContent(item, i, apiURI, addMessage, updateAgentMessage, languageCode))}\n        </RichContentCard>\n      )}\n      {chips.map((chipObj, i) => <Chips key={i} chips={chipObj} />)}\n    </>\n  );\n}\n","import {UserMessage, AgentMessage} from \"../Styles\";\nimport {Message} from \"../utilities/types\";\n\nexport const Text = ({message}: {message: Message}) => {\n  const TypedMessage = message.type === 'user' ? UserMessage : AgentMessage;\n\n  return (\n    <TypedMessage>\n      {message.text}\n    </TypedMessage>\n  )\n}\n","import {ChatSVG, CloseSVG, CustomIcon} from '../Styles';\n\nexport const ChatIcon = ({visible, url}: {visible: boolean, url?: string}) => {\n  return url ?\n    <CustomIcon visible={visible} src={url} />\n    :\n    /* Dialogflow Messenger Icon */\n    (\n      <ChatSVG visible={visible} width=\"36\" height=\"36\" viewBox=\"0 0 36 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <mask id=\"mask0\" mask-type=\"alpha\" maskUnits=\"userSpaceOnUse\" x=\"3\" y=\"3\" width=\"30\" height=\"30\">\n          <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M24.0001 19.5C24.8251 19.5 25.5001 18.825 25.5001 18V4.5C25.5001 3.675 24.8251 3 24.0001 3H4.50006C3.67506 3 3.00006 3.675 3.00006 4.5V25.5L9.00006 19.5H24.0001ZM22.5001 5.99999V16.5H9.00013H6.00013V5.99999H22.5001ZM28.5 9.00001H31.5C32.325 9.00001 33 9.67501 33 10.5V33L27 27H10.5C9.675 27 9 26.325 9 25.5V22.5H28.5V9.00001Z\" fill=\"white\" />\n        </mask>\n        <g mask=\"url(#mask0)\">\n          <rect width=\"36\" height=\"36\" fill=\"white\" />\n        </g>\n      </ChatSVG>\n    )\n}\n\nexport const CloseIcon = ({visible}: {visible: boolean}) => {\n  /* Close (X) Icon */\n  return (\n    <CloseSVG visible={visible} id=\"closeSvg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59\n          12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"></path>\n      <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n    </CloseSVG>\n  )\n}\n","import { useEffect, useState, useRef } from 'react';\nimport {Text, ContentCard} from './rich-content';\nimport {\n  Widget,\n  Messenger,\n  TitleBar,\n  TextWindow,\n  MessageListWrapper,\n  MessageList,\n  InputField,\n  TextInput,\n  SendIcon,\n  Error,\n} from './Styles';\nimport {Message, APIResponse} from './utilities/types';\nimport {getAttributes} from './utilities/utils';\nimport {ChatIcon, CloseIcon} from './utilities/components';\nimport {handleResponse} from './utilities/responseHandlers';\n\nfunction App({ domElement }: { domElement: Element }) {\n  const {\n    \"chat-title\": chatTitle,\n    'language-code': languageCode,\n    'api-uri': apiURI,\n    'chat-icon': chatIcon,\n    'expand': expand,\n  } = getAttributes(domElement);\n\n  const [open, setOpen] = useState(expand != null);\n  const [value, setValue] = useState('');\n  const [error, setError] = useState(false);\n  const [messages, setMessages] = useState<Message[]>([]);\n\n  const messagesEndRef = useRef<HTMLDivElement>(null)\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\n  }\n\n  useEffect(() => {\n    if (error) {\n      setTimeout(() => {\n        setError(false);\n      }, 2000)\n    }\n  }, [error])\n\n  const updateAgentMessage = (response: APIResponse, fromEvent?: boolean) => {\n    setMessages(prevMessages => {\n      if (JSON.stringify(response) === '{}') {\n        const messagesCopy = prevMessages.filter(m => m.text !== '...');\n        setError(true);\n        return messagesCopy;\n      }\n      const messagesCopy = [...prevMessages];\n\n      const {queryResult} = response\n      const {text: messageSent = '', responseMessages = []} = queryResult\n\n      let lastAgentIndex = messagesCopy.length - 1;\n      while (lastAgentIndex > 0 && (\n        fromEvent ?\n          messagesCopy[lastAgentIndex].text !== '...'\n          :\n          messagesCopy[lastAgentIndex].id !== messageSent\n      )) {\n        lastAgentIndex--;\n      }\n\n      if (messagesCopy[lastAgentIndex].id === messageSent || (fromEvent && messagesCopy[lastAgentIndex].text === '...')) {\n        const responseMessage = responseMessages[0]\n\n        if (responseMessage.text) {\n          const responseText = responseMessage?.text?.text\n          messagesCopy[lastAgentIndex].text = responseText[0];\n          messagesCopy[lastAgentIndex].id = undefined;\n        } else if (responseMessage.payload) {\n          const {richContent = []} = responseMessage.payload;\n          const contentList = richContent[0]\n          messagesCopy[lastAgentIndex].text = undefined;\n          messagesCopy[lastAgentIndex].id = undefined;\n          messagesCopy[lastAgentIndex].payload = contentList;\n        }\n\n      }\n\n      for (let i = 1; i < responseMessages.length; i++) {\n        const message = responseMessages[i];\n\n        if (message.text) {\n          const responseText = message?.text?.text\n          responseText && messagesCopy.push({type: 'agent', text: responseText[0]})\n        } else if (message.payload) {\n          const {richContent = []} = message.payload;\n          const contentList = richContent[0]\n          contentList && messagesCopy.push({type: 'agent', payload: contentList})\n        }\n\n      }\n      return messagesCopy\n    })\n\n    scrollToBottom();\n  }\n\n  const addUserMessage = async () => {\n    const textVal = value\n    addMessage({type: 'user', text: textVal})\n    addMessage({type: 'agent', text: '...', id: textVal})\n\n    const response = await handleResponse(apiURI, languageCode, value)\n    console.log(response)\n    updateAgentMessage(response)\n  }\n\n  const addMessage = ({type, text, id}: Message) => {\n    setMessages(prevMessages => ([...prevMessages, {type, text, id}]));\n    setValue('');\n  }\n\n  useEffect(() => {\n    scrollToBottom()\n  }, [messages.length]);\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      addUserMessage();\n    }\n  }\n\n  const renderMessage = (message: Message, i: number) => {\n    if (message.text) {\n      return <Text key={i} message={message} />\n    } else if (message.payload) {\n      return <ContentCard key={i} message={message} apiURI={apiURI} addMessage={addMessage} updateAgentMessage={updateAgentMessage} languageCode={languageCode} />\n    }\n    return null;\n  }\n\n  return (\n    <div className=\"App\">\n      <Messenger opened={open}>\n        <TitleBar>\n          {chatTitle}\n        </TitleBar>\n        <TextWindow>\n          <MessageListWrapper>\n            <Error open={error}>\n              Something went wrong, please try again.\n            </Error>\n            <MessageList>\n              {messages.map((message, i) => renderMessage(message, i)\n              )}\n              <div ref={messagesEndRef} />\n            </MessageList>\n          </MessageListWrapper>\n        </TextWindow>\n        <InputField>\n          <TextInput id=\"text-input\" type='text' value={value} onKeyDown={handleKeyDown} onChange={(event) => setValue(event.target.value)} placeholder=\"Ask something...\" />\n          <div onClick={() => addUserMessage()}>\n            <SendIcon visible={value.length > 0}>\n              <path d=\"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\"></path>\n            </SendIcon>\n          </div>\n        </InputField>\n      </Messenger>\n      <Widget onClick={() => setOpen(!open)}>\n        <ChatIcon url={chatIcon} visible={!open} />\n        <CloseIcon visible={open} />\n      </Widget>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nlet interval = setInterval(() => {\n  const messengerDivs = document.querySelectorAll('df-messenger')\n  if (messengerDivs.length) clearInterval(interval);\n\n  messengerDivs.forEach(Div =>  {\n    ReactDOM.render(\n      <React.StrictMode>\n        <App domElement={Div} />\n      </React.StrictMode>,\n      Div\n    );\n  })\n}, 100); // check every 100ms\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}